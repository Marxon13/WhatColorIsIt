//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Foundation/Foundation.h>
#import <ScreenSaver/ScreenSaver.h>
#import "NSServiceViewController.h"

#pragma mark -

//
// File: /System/Library/Frameworks/ScreenSaver.framework/Versions/A/ScreenSaver
// UUID: 82FC8662-E1D2-37A5-919C-242F3CC7AD6A
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 297.1.0.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ScreenSaverControl
@property(readonly) BOOL screenSaverIsRunningInBackground;
@property(readonly) double screenSaverTimeRemaining;
@property BOOL screenSaverCanRun;
@property(readonly) BOOL screenSaverIsRunning;
- (void)screenSaverDidFadeInBackground:(BOOL)arg1 psnHi:(unsigned int)arg2 psnLow:(unsigned int)arg3;
- (void)restartForUser:(NSString *)arg1;
- (void)screenSaverStopNowWithOptions:(NSDictionary *)arg1;
- (void)screenSaverStopNow;
- (void)screenSaverStartNow;
@end

@protocol ScreenSaverExtension <NSExtensionRequestHandling>
@end

@protocol ScreenSaverExtensionContext <NSObject>
@end

@protocol ScreenSaverExtensionHosting
- (void)___nsx_pingHost:(void (^)(void))arg1;
@end

@protocol ScreenSaverExtensionPosting <ScreenSaverExtensionHosting>
- (void)extension:(NSString *)arg1 viewBridgeEndpoint:(NSXPCListenerEndpoint *)arg2;
@end

@protocol ScreenSaverHostExtensionContext <NSObject>
@end

//@interface ScreenSaverExtensionModule: ScreenSaverModule <NSXPCListenerDelegate>
//{
//    NSXPCListener *_listener;
//    BOOL _needsAnimationTimer;
//    NSViewController *_configurationViewController;
//    NSObject<OS_dispatch_queue> *_requestQueue;
//    NSObject<OS_dispatch_semaphore> *_requestQueueSema;
//    NSObject<OS_dispatch_queue> *_viewBridgeEndpointQueue;
//    NSObject<OS_dispatch_semaphore> *_viewBridgeEndpointSema;
//    NSXPCListenerEndpoint *_viewBridgeEndpoint;
//    NSExtension *_extension;
//}
//
//+ (id)_exportedInterface;
//@property(retain) NSExtension *extension; // @synthesize extension=_extension;
//- (void)___nsx_pingHost:(CDUnknownBlockType)arg1;
//- (void)requestConfigurationViewController:(CDUnknownBlockType)arg1;
//- (BOOL)needsAnimationTimer;
//- (void)extension:(id)arg1 viewBridgeEndpoint:(id)arg2;
//- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
//- (void)beginExtensionRequestWithUserInfo:(id)arg1;
//- (id)loadViewForFrame:(struct CGRect)arg1 isPreview:(BOOL)arg2;
//@property(readonly, nonatomic) NSXPCListenerEndpoint *listenerEndpoint;
//- (void)dealloc;
//- (id)initWithExtension:(id)arg1;
//
//// Remaining properties
//@property(readonly, copy) NSString *debugDescription;
//@property(readonly, copy) NSString *description;
//@property(readonly) unsigned long long hash;
//@property(readonly) Class superclass;
//
//@end

@interface ScreenSaverModules : NSObject
{
    NSMutableDictionary *_modules;
    NSMutableDictionary *_times;
    unsigned long long _searchDomains;
}

+ (id)sharedInstance;
- (void)_dropCrashReporterBreadCrumbForModule:(id)arg1;
- (id)defaultModuleName;
- (Class)classForModule:(id)arg1;
- (BOOL)_moduleNeedsAcceleration:(id)arg1;
- (id)loadModule:(id)arg1 frame:(struct CGRect)arg2 isPreview:(BOOL)arg3;
- (id)sortedModulesForType:(id)arg1;
- (void)findModulesWithOrder:(id)arg1 forceRebuild:(BOOL)arg2;
- (id)_findExtensionModules;
- (id)randomModule;
- (id)defaultModule;
- (id)basicModule;
- (id)basicModuleName;
- (id)pathForModuleName:(id)arg1;
- (id)findAll32BitModules;
- (id)findAllModules;
- (id)findModuleWithPath:(id)arg1;
- (id)findModuleWithName:(id)arg1;
- (id)moduleWithPath:(id)arg1;
- (id)moduleWithName:(id)arg1;
- (id)moduleNames;
- (BOOL)modulePathIsAppleModule:(id)arg1;
- (id)_directoriesInSearchDomain;
- (void)setModuleSearchDomains:(unsigned long long)arg1;
- (unsigned long long)moduleSearchDomains;
- (void)dealloc;
- (id)init;

@end

@interface ScreenSaverDefaultsManager : NSObject
{
    NSMutableDictionary *_cache;
}

+ (id)defaultsManager;
- (void)_appWillTerminate:(id)arg1;
- (void)synchronize;
- (void)setDefaults:(id)arg1 forKey:(id)arg2;
- (id)defaultsForKey:(id)arg1;
- (id)init;

@end

@interface ScreenSaverWindow : NSWindow
{
    NSMutableArray *_trectTags;
}

- (void)_cancelKey:(id)arg1;
- (void)removeAllTrackingRects;
- (void)_discardTrackingRect:(int)arg1;
- (int)_setTrackingRect:(struct CGRect)arg1 inside:(BOOL)arg2 owner:(id)arg3 userData:(void *)arg4 useTrackingNum:(int)arg5;
- (void)stopAnimating;
- (void)startAnimating;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface ScreenSaverController : NSObject <ScreenSaverControl>
{
    void *_reserved;
}

+ (id)controller;
- (void)screenSaverDidFadeInBackground:(BOOL)arg1 psnHi:(unsigned int)arg2 psnLow:(unsigned int)arg3;
@property(readonly) BOOL screenSaverIsRunningInBackground;
@property(readonly) double screenSaverTimeRemaining;
- (void)restartForUser:(id)arg1;
- (void)screenSaverStopNow;
- (void)screenSaverStopNowWithOptions:(id)arg1;
- (void)screenSaverStartNow;
@property BOOL screenSaverCanRun;
@property(readonly) BOOL screenSaverIsRunning;

@end

@interface ScreenSaverViewController : NSServiceViewController
{
    BOOL _initialAnimationState;
    BOOL _didFirstResize;
}

+ (struct CGRect)expectedViewFrame;
@property BOOL didFirstResize; // @synthesize didFirstResize=_didFirstResize;
@property BOOL initialAnimationState; // @synthesize initialAnimationState=_initialAnimationState;
- (void)stopAnimation;
- (void)startAnimation;
- (BOOL)remoteViewSizeChanged:(struct CGSize)arg1 transaction:(id)arg2;
- (unsigned long long)awakeFromRemoteView;

@end

@interface ScreenSaverExtensionContext : NSExtensionContext <ScreenSaverExtensionContext>
{
}

+ (id)_extensionAuxiliaryVendorProtocol;
+ (id)_extensionAuxiliaryHostProtocol;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScreenSaverHostExtensionContext : NSExtensionContext <ScreenSaverHostExtensionContext>
{
}

+ (id)_extensionAuxiliaryVendorProtocol;
+ (id)_extensionAuxiliaryHostProtocol;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScreenSaverMessageTracerLogger : NSObject
{
}

+ (id)sharedLogger;
- (void)logMessageWithName:(id)arg1 dictionary:(id)arg2;
- (void)logMessageWithName:(id)arg1 signature:(id)arg2;

@end

@interface ScreenSaverExtensionView : ScreenSaverView
{
//    NSRemoteViewController *_remoteViewController;
//    ScreenSaverExtensionModule *_module;
}

- (void)cxx_destruct;
- (void)stopAnimation;
- (void)startAnimation;
- (void)setScreenSaverModule:(id)arg1;
- (void)setRemoteViewController:(id)arg1;

@end

@interface ScreenSaverExtension : NSObject <ScreenSaverExtension>
{
}

- (BOOL)needsAnimationTimer;
- (void)beginRequestWithExtensionContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScreenSaverConfigurationViewController : NSServiceViewController
{
}

@end

@interface ScreenSaverModule : NSObject <NSCopying>
{
    NSString *_moduleName;
    NSString *_displayName;
    NSString *_path;
    NSBundle *_bundle;
    id _representedObject;
    int _type;
    BOOL _enabled;
    BOOL _archCompatible;
    BOOL _requiresGraphicsAcceleration;
}

+ (id)floatingMessageModuleWithMessage:(id)arg1;
+ (id)defaultModule;
+ (id)moduleFromLegacyDefaults:(id)arg1;
+ (id)moduleWithDictionary:(id)arg1;
+ (id)moduleWithName:(id)arg1;
+ (id)moduleWithPath:(id)arg1;
+ (id)localizedSaverNameForPath:(id)arg1;
- (void)requestConfigurationViewController:(CDUnknownBlockType)arg1;
- (id)loadViewForFrame:(struct CGRect)arg1 isPreview:(BOOL)arg2;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)enabled;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (long long)caseInsensitiveCompare:(id)arg1;
- (long long)compare:(id)arg1;
- (void)setType:(int)arg1;
- (int)type;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (BOOL)canRunAtLoginWindow;
- (BOOL)signedByApple;
- (id)saverPath;
- (BOOL)isCompatibleWithCurrentArch;
- (void)setPath:(id)arg1;
- (id)path;
- (id)bundle;
- (id)bundleID;
- (id)dictionaryRepresentation;
- (void)setDisplayName:(id)arg1;
- (id)crashReporterString;
- (id)thumbnail;
- (BOOL)needsAnimationTimer;
- (id)displayName;
- (id)defaultsName;
- (void)setName:(id)arg1;
- (id)name;
- (void)setRequiresGraphicsAcceleration:(BOOL)arg1;
- (BOOL)requiresGraphicsAcceleration;
- (BOOL)isQC;
- (BOOL)isScreenSaver;
- (void)addMessageTracerEntry;
- (BOOL)is32bitOnly;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDictionary:(id)arg1;

@end

